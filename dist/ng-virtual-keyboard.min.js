!function(t){!function(t){"use strict";t.module("ts-virtual-keyboard",[]).constant("VKI_CONFIG",{}).service("ngVirtualKeyboardService",["VKI_CONFIG",function(t){var e=function(t){var n;if(null===t||"object"!=typeof t)return t;if(t instanceof Date)return n=new Date,n.setTime(t.getTime()),n;if(t instanceof Array){n=[];for(var r=0,o=t.length;r<o;r++)n[r]=e(t[r]);return n}if(t instanceof Object){n={};for(var a in t)t.hasOwnProperty(a)&&(n[a]=e(t[a]));return n}throw new Error("Unable to copy obj! Its type isn't supported.")},n=function(t){var e,n=$(t);return n&&(e=$(t).getkeyboard()),e};return{attach:function(n,r,o){var a=e(t);r=r||{};for(var i in r)r.hasOwnProperty(i)&&(a[i]=r[i]);a.accepted=r.accepted||o,a.customLayout&&(a.customLayout["default"]=a.customLayout[a.tsLayout]);var u=$(n).keyboard(a);if(u&&a.extensions)for(var c in a.extensions){var f=a.extensions[c];f?u[c](f):u[c]()}},getKeyboard:function(t){return n(t)},getKeyboardById:function(t){return n("#"+t)}}}]).directive("ngVirtualKeyboard",["ngVirtualKeyboardService","$timeout",function(t,e){return{restrict:"A",require:"?ngModel",scope:{config:"=ngVirtualKeyboard"},link:function(n,r,o,a){a&&t.attach(r[0],n.config,function(){e(function(){a.$setViewValue(r[0].value)})})}}}])}(t)}(angular);