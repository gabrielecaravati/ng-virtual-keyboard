!function(t){!function(t){"use strict";t.module("ts-virtual-keyboard",[]).constant("VKI_CONFIG",{}).service("ngVirtualKeyboardService",["VKI_CONFIG",function(t){var e=function(t){var n;if(null===t||"object"!=typeof t)return t;if(t instanceof Date)return n=new Date,n.setTime(t.getTime()),n;if(t instanceof Array){n=[];for(var r=0,o=t.length;r<o;r++)n[r]=e(t[r]);return n}if(t instanceof Object){n={};for(var i in t)t.hasOwnProperty(i)&&(n[i]=e(t[i]));return n}throw new Error("Unable to copy obj! Its type isn't supported.")},n=function(t){var e,n=$(t);return n&&(e=$(t).getkeyboard()),e};return{attach:function(n,r,o){var i=e(t);if(!i.isMobile){r=r||{};for(var a in r)r.hasOwnProperty(a)&&(i[a]=r[a]);i.accepted=r.accepted||o,i.customLayout&&(i.customLayout["default"]=i.customLayout[i.tsLayout]);var u=$(n).keyboard(i);if(u&&i.extensions)for(var c in i.extensions){var f=i.extensions[c];f?u[c](f):u[c]()}}},getKeyboard:function(t){return n(t)},getKeyboardById:function(t){return n("#"+t)}}}]).directive("ngVirtualKeyboard",["ngVirtualKeyboardService","$timeout",function(t,e){return{restrict:"A",require:"?ngModel",scope:{config:"=ngVirtualKeyboard"},link:function(n,r,o,i){i&&(t.attach(r[0],n.config,function(){e(function(){i.$setViewValue(r[0].value)})}),n.$on("$destroy",function(){$(r[0]).getkeyboard().destroy()}))}}}])}(t)}(angular);